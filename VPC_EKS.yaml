AWSTemplateFormatVersion: '2010-09-09'
Resources:

  # 1. VPC
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties: 
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true

  # 2. Public Subnet
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties: 
      VpcId: !Ref VPC
      CidrBlock: '10.0.1.0/24'
      AvailabilityZone: 'us-west-2a'
      MapPublicIpOnLaunch: true

  # 3. Private Subnet
  PrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties: 
      VpcId: !Ref VPC
      CidrBlock: '10.0.2.0/24'
      AvailabilityZone: 'us-west-2b'

  # 4. Internet Gateway
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'

  # Attach Internet Gateway to the VPC
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # 5. Route Table for Public Subnet
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC

  # 6. Public Route (to allow Internet access)
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  # 7. Subnet Route Table Association
  PublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # 8. EKS Cluster Role
  EKSClusterRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'eks.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'eks-cluster-policy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeRouteTables'
                Resource: '*'

  # 9. EKS Cluster
  EKSCluster:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: 'MyEKSCluster'
      RoleArn: !GetAtt EKSClusterRole.Arn
      ResourcesVpcConfig:
        SubnetIds:
          - !Ref PublicSubnet
          - !Ref PrivateSubnet
        SecurityGroupIds:
          - !Ref EKSClusterSecurityGroup

  # 10. EKS Security Group for the Cluster
  EKSClusterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for the EKS control plane'
      VpcId: !Ref VPC

  # 11. EKS Managed Node Group (Optional)
  EKSNodeGroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      ClusterName: !Ref EKSCluster
      NodegroupName: 'MyNodeGroup'
      Subnets:
        - !Ref PublicSubnet
        - !Ref PrivateSubnet
      NodeRole: !GetAtt EKSNodeRole.Arn
      InstanceTypes:
        - 't3.medium'
      ScalingConfig:
        MinSize: 2
        MaxSize: 4
        DesiredSize: 3

  # 12. IAM Role for EKS Worker Nodes
  EKSNodeRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'ec2.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'eks-worker-policy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeRouteTables'
                Resource: '*'

Outputs:
  EKSClusterName:
    Description: 'EKS Cluster Name'
    Value: !Ref EKSCluster
  VPCId:
    Description: 'VPC ID'
    Value: !Ref VPC
